{"version":3,"sources":["images/mestoLogo.svg","images/editButton.svg","images/addButton.svg","components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Spinner.js","components/ImagePopup.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","utils/Api.js","utils/constants.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","React","Component","Footer","CurrentUserContext","createContext","Card","handleClick","props","onCardClick","card","handleLikeClick","onCardLike","handleDeleteCard","onCardDelete","isOwn","this","owner","_id","context","isLiked","likes","some","item","link","name","onClick","type","length","contextType","Main","onEditAvatar","avatar","onEditProfile","pen","about","onAddPlace","plus","cards","map","key","Spinner","ImagePopup","onClose","image","PopupWithForm","isOpen","title","noValidate","onSubmit","children","btnTitle","AddPlacePopup","handleNameChange","e","setState","target","value","handleLinkChange","handleSubmit","preventDefault","state","placeholder","minLength","maxLength","required","id","onChange","EditAvatarPopup","event","onUpdateAvatar","imageLinkRef","current","createRef","ref","EditProfilePopup","handleDescriptionChange","description","onUpdateUser","pattern","baseURL","token","_baseURL","_token","url","properties","fetch","then","res","ok","json","Promise","reject","status","_fetchInfo","headers","authorization","dataForm","method","body","JSON","stringify","liked","App","handleEditAvatarClick","isEditAvatarPopupOpen","handleEditProfileClick","isEditProfilePopupOPen","handleAddPlaceClick","isAddPlacePopupOpen","handleCardClick","selectedCard","dataImg","closeAllPopups","handleUpdateUser","userInfo","api","updUserInfo","currentUser","catch","error","console","log","handleUpdateAvatar","changeAvatar","handleAddPlaceSubmit","uploadCard","newCard","handleCardLike","likeCard","newCards","handleCardDelete","deleteCard","filter","isLoading","all","getUserInfo","getInitialCards","initialCards","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"wFAAAA,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,qMCa5BC,E,uKARX,OACE,4BAAQC,UAAU,UAChB,yBAAKA,UAAU,OAAOC,IAAKC,IAAMC,IAAI,oD,GAJxBC,IAAMC,WCSZC,E,uKARX,OACE,4BAAQN,UAAU,UAChB,uBAAGA,UAAU,qBAAb,+B,GAJaI,IAAMC,WCDdE,EAAqBH,IAAMI,gBCElCC,E,4MACJC,YAAc,WACZ,EAAKC,MAAMC,YAAY,EAAKD,MAAME,O,EAGpCC,gBAAkB,WAChB,EAAKH,MAAMI,WAAW,EAAKJ,MAAME,O,EAGnCG,iBAAmB,WACjB,EAAKL,MAAMM,aAAa,EAAKN,MAAME,O,uDAK1B,IAAD,OACFK,EAAQC,KAAKR,MAAME,KAAKO,MAAMC,MAAQF,KAAKG,QAAQD,IACnDE,EAAUJ,KAAKR,MAAME,KAAKW,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKL,MAAQ,EAAKC,QAAQD,OAC7E,OACE,yBAAKrB,UAAU,SACb,yBACEA,UAAU,eACVC,IAAKkB,KAAKR,MAAME,KAAKc,KACrBxB,IAAKgB,KAAKR,MAAME,KAAKe,KACrBC,QAASV,KAAKT,cAEfQ,GAAS,4BAAQY,KAAK,SAAS9B,UAAU,qBAAqB6B,QAASV,KAAKH,mBAC7E,yBAAKhB,UAAU,sBACb,uBAAGA,UAAU,eAAemB,KAAKR,MAAME,KAAKe,MAC5C,yBAAK5B,UAAU,mBACb,4BAAQ8B,KAAK,SAAS9B,UAAWuB,EAAU,iCAAmC,cAAeM,QAASV,KAAKL,kBAC3G,uBAAGd,UAAU,gBAAgBmB,KAAKR,MAAME,KAAKW,MAAMO,e,GA/B5C3B,IAAMC,WAAnBI,EAaGuB,YAAczB,EA0BRE,Q,kCCpCTwB,E,uKAGM,IAAD,OACP,OACE,0BAAMjC,UAAU,WAChB,6BAASA,UAAU,WACjB,yBAAKA,UAAU,gBAEb,4BACEA,UAAU,qBACV8B,KAAK,SACLD,QAASV,KAAKR,MAAMuB,cAClB,yBACE/B,IAAI,uCACJH,UAAU,kBACVC,IAAKkB,KAAKG,QAAQa,UAIxB,yBAAKnC,UAAU,iBACb,yBAAKA,UAAU,oBACb,wBAAIA,UAAU,iBAAiBmB,KAAKG,QAAQM,MAC5C,4BACEE,KAAK,SACL9B,UAAU,8BACV6B,QAASV,KAAKR,MAAMyB,eAClB,yBACAnC,IAAKoC,IACLlC,IAAI,qCAIV,uBAAGH,UAAU,gBAAgBmB,KAAKG,QAAQgB,SAG9C,4BACER,KAAK,SACL9B,UAAU,6BACV6B,QAASV,KAAKR,MAAM4B,YAClB,yBACEtC,IAAKuC,IACLrC,IAAI,+BAIZ,6BAASH,UAAU,UAChBmB,KAAKR,MAAM8B,MAAMC,KAAI,SAAA7B,GAAI,OACxB,kBAAC,EAAD,CACEA,KAAMA,EACN8B,IAAK9B,EAAKQ,IACVT,YAAa,EAAKD,MAAMC,YACxBG,WAAY,EAAKJ,MAAMI,WACvBE,aAAc,EAAKN,MAAMM,wB,GArDlBb,IAAMC,WAAnB4B,EACGD,YAAczB,EA6DR0B,QC5DAW,MANf,WACI,OACI,yBAAK5C,UAAU,aCoBR6C,E,kDArBb,WAAYlC,GAAQ,uCACZA,G,qDAIN,OACE,yBAAKX,UAAWmB,KAAKR,MAAME,KAAO,oCAAsC,wBACtE,yBAAKb,UAAU,0BACb,4BACAA,UAAU,eACV8B,KAAK,SACLD,QAASV,KAAKR,MAAMmC,UAEpB,yBAAM9C,UAAU,eAAeC,IAAKkB,KAAKR,MAAMoC,MAAMpB,KAAMxB,IAAKgB,KAAKR,MAAMoC,MAAMnB,OACjF,uBAAG5B,UAAU,eAAemB,KAAKR,MAAMoC,MAAMnB,Y,GAf9BxB,IAAMC,WCqBhB2C,MArBf,SAAwBrC,GACvB,OACC,yBAAKX,UAAS,2BACQW,EAAMiB,KADd,iBAETjB,EAAMsC,OAAU,eAAiB,KAEpC,yBAAKjD,UAAU,oBACb,4BAAQA,UAAU,eAAe8B,KAAK,SAASD,QAASlB,EAAMmC,UAC9D,wBAAI9C,UAAU,gBAAgBW,EAAMuC,OACpC,0BAAMlD,UAAU,OAAO4B,KAAMjB,EAAMiB,KAAMuB,YAAU,EAACC,SAAUzC,EAAMyC,UACjEzC,EAAM0C,SACP,4BAAQvB,KAAK,SAAS9B,UAAU,mBAC7BW,EAAM2C,cCmEFC,E,kDA7Eb,WAAY5C,GAAQ,IAAD,8BACjB,cAAMA,IAOR6C,iBAAmB,SAACC,GAClB,EAAKC,SAAS,CACZ9B,KAAM6B,EAAEE,OAAOC,SAVA,EAcnBC,iBAAmB,SAACJ,GAClB,EAAKC,SAAS,CACZ/B,KAAM8B,EAAEE,OAAOC,SAhBA,EAoBnBE,aAAe,SAACL,GACdA,EAAEM,iBACF,EAAKpD,MAAM4B,WAAW,CACpBX,KAAM,EAAKoC,MAAMpC,KACjBD,KAAM,EAAKqC,MAAMrC,OAEnB,EAAK+B,SAAS,CACZ9B,KAAM,GACND,KAAM,MA1BR,EAAKqC,MAAQ,CACXpC,KAAM,GACND,KAAM,IAJS,E,qDAiCjB,OACE,kBAAC,EAAD,CACEC,KAAK,OACLsB,MAAM,gEACNI,SAAS,6CACTL,OAAQ9B,KAAKR,MAAMsC,OACnBH,QAAS3B,KAAKR,MAAMmC,QACpBM,SAAUjC,KAAK2C,cAEb,2BACEhC,KAAK,OACLF,KAAK,OACLqC,YAAY,mDACZjE,UAAU,uCACVkE,UAAU,IACVC,UAAU,KACVC,UAAQ,EACRC,GAAG,aACHT,MAAOzC,KAAK6C,MAAMpC,KAClB0C,SAAUnD,KAAKqC,mBAEjB,0BACExD,UAAU,qBACVqE,GAAG,qBAEL,2BACEvC,KAAK,MACLF,KAAK,OACLqC,YAAY,qGACZjE,UAAU,sCACVoE,UAAQ,EACRC,GAAG,YACHT,MAAOzC,KAAK6C,MAAMrC,KAClB2C,SAAUnD,KAAK0C,mBAEjB,0BACE7D,UAAU,qBACVqE,GAAG,yB,GAvEajE,IAAMC,WCwCnBkE,E,kDAvCb,WAAY5D,GAAQ,IAAD,8BACjB,cAAMA,IAIRmD,aAAe,SAACU,GACdA,EAAMT,iBACN,EAAKpD,MAAM8D,eAAe,EAAKC,aAAaC,QAAQf,OACpD,EAAKc,aAAaC,QAAQf,MAAQ,IANlC,EAAKc,aAAetE,IAAMwE,YAFT,E,qDAYjB,OACI,kBAAC,EAAD,CACEhD,KAAK,SACLsB,MAAM,wFACND,OAAQ9B,KAAKR,MAAMsC,OACnBH,QAAS3B,KAAKR,MAAMmC,QACpBM,SAAUjC,KAAK2C,aACfR,SAAS,0DAET,2BACExB,KAAK,MACL9B,UAAU,sCACV4B,KAAK,OACLqC,YAAY,qGACZI,GAAG,eACHD,UAAQ,EACRS,IAAK1D,KAAKuD,eAEZ,0BACE1E,UAAU,qBACVqE,GAAG,4B,GAjCejE,IAAMC,WCC9ByE,E,kDACJ,WAAYnE,GAAQ,IAAD,8BACjB,cAAMA,IAgBR6C,iBAAmB,SAACgB,GAClB,EAAKd,SAAS,CACZ9B,KAAM4C,EAAMb,OAAOC,SAnBJ,EAuBnBmB,wBAA0B,SAACP,GACzB,EAAKd,SAAS,CACZsB,YAAaR,EAAMb,OAAOC,SAzBX,EA6BnBE,aAAe,SAACU,GACdA,EAAMT,iBACN,EAAKpD,MAAMsE,aAAa,CACtBrD,KAAM,EAAKoC,MAAMpC,KACjBU,MAAO,EAAK0B,MAAMgB,eA/BpB,EAAKhB,MAAQ,CACXpC,KAAM,GACNoD,YAAa,IAJE,E,gEAWjB7D,KAAKuC,SAAS,CACZ9B,KAAMT,KAAKG,QAAQM,KACnBoD,YAAa7D,KAAKG,QAAQgB,U,+BAyB5B,OACI,kBAAC,EAAD,CACEV,KAAK,UACLsB,MAAM,4HACND,OAAQ9B,KAAKR,MAAMsC,OACnBH,QAAS3B,KAAKR,MAAMmC,QACpBM,SAAUjC,KAAK2C,aACfR,SAAS,0DAEP,2BACExB,KAAK,OACLF,KAAK,OACLqC,YAAY,qBACZjE,UAAU,sCACVoE,UAAQ,EACRc,QAAQ,wDACRhB,UAAU,IACVC,UAAU,KACVE,GAAG,aACHT,MAAOzC,KAAK6C,MAAMpC,KAClB0C,SAAUnD,KAAKqC,mBAEjB,0BACExD,UAAU,qBACVqE,GAAG,qBAEL,2BACEvC,KAAK,OACLF,KAAK,MACLqC,YAAY,kCACZjE,UAAU,qCACVoE,UAAQ,EACRF,UAAU,IACVC,UAAU,MACVE,GAAG,YACHT,MAAOzC,KAAK6C,MAAMgB,YAClBV,SAAUnD,KAAK4D,0BAEjB,0BACE/E,UAAU,qBACVqE,GAAG,yB,GA/EcjE,IAAMC,WAA/ByE,EASG9C,YAAczB,EA8ERuE,QCIA,M,WA5Fb,WAAYK,EAASC,GAAQ,oBAC3BjE,KAAKkE,SAAWF,EAChBhE,KAAKmE,OAASF,E,uDAGLG,EAAKC,GACd,OAAOC,MAAMtE,KAAKkE,SAAWE,EAAKC,GAC/BE,MAAK,SAAAC,GACJ,OAAGA,EAAIC,GACED,EAAIE,OAENC,QAAQC,OAAR,gDAA0BJ,EAAIK,c,oCAKzC,OAAO7E,KAAK8E,WAAW,YAAa,CAClCC,QAAS,CACPC,cAAehF,KAAKmE,Y,kCAKdc,GACV,OAAOjF,KAAK8E,WAAW,YAAa,CAClCI,OAAQ,QACRH,QAAS,CACPC,cAAehF,KAAKmE,OACpB,eAAgB,oBAElBgB,KAAMC,KAAKC,UAAUJ,O,wCAKvB,OAAOjF,KAAK8E,WAAW,SAAU,CAC/BC,QAAS,CACPC,cAAehF,KAAKmE,Y,iCAKfc,GACT,OAAOjF,KAAK8E,WAAW,SAAU,CAC/BI,OAAQ,OACRH,QAAS,CACPC,cAAehF,KAAKmE,OACpB,eAAgB,oBAElBgB,KAAMC,KAAKC,UAAUJ,O,+BAIhB/B,EAAIoC,GACX,IAAIJ,EAMJ,OAJEA,EADEI,EACO,SAEA,MAEJtF,KAAK8E,WAAW,gBAAkB5B,EAAI,CAC3CgC,OAAQA,EACRH,QAAS,CACPC,cAAehF,KAAKmE,Y,iCAKfjB,GACT,OAAOlD,KAAK8E,WAAW,UAAY5B,EAAI,CACrCgC,OAAQ,SACRH,QAAS,CACPC,cAAehF,KAAKmE,Y,mCAKb3D,GACX,OAAOR,KAAK8E,WAAW,mBAAoB,CACzCI,OAAQ,QACRH,QAAS,CACPC,cAAehF,KAAKmE,OACpB,eAAgB,oBAElBgB,KAAMC,KAAKC,UAAU,CACnBrE,OAAQR,U,KAOD,CCrFQ,8CACF,wCCmLN+E,E,kDAjLb,WAAY/F,GAAQ,IAAD,8BACjB,cAAMA,IA8BRgG,sBAAwB,WACtB,EAAKjD,SAAS,CACZkD,uBAAuB,KAjCR,EAqCnBC,uBAAyB,WACvB,EAAKnD,SAAS,CACZoD,wBAAwB,KAvCT,EA2CnBC,oBAAsB,WACpB,EAAKrD,SAAS,CACZsD,qBAAqB,KA7CN,EAiDnBC,gBAAkB,SAACpG,GACjB,EAAK6C,SAAS,CACZwD,cAAc,EACdC,QAAS,CACPxF,KAAMd,EAAKc,KACXC,KAAMf,EAAKe,SAtDE,EA2DnBwF,eAAiB,WACf,EAAK1D,SAAS,CACZoD,wBAAwB,EACxBE,qBAAqB,EACrBJ,uBAAuB,EACvBM,cAAc,EACdC,QAAS,CACPxF,KAAM,KACNC,KAAM,SAnEO,EAwEnByF,iBAAmB,SAACC,GAClBC,EAAIC,YAAYF,GACb5B,MAAK,SAAA4B,GACJ,EAAK5D,SAAS,CACZ+D,YAAaH,IAEf,EAAKF,oBAENM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAhFb,EAmFnBG,mBAAqB,SAACnG,GACpB4F,EAAIQ,aAAapG,GACd+D,MAAK,SAAA4B,GACJ,EAAK5D,SAAS,CACZ+D,YAAaH,IAEf,EAAKF,oBAENM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OA3Fb,EA8FnBK,qBAAuB,SAAC5B,GACtBmB,EAAIU,WAAW7B,GACZV,MAAK,SAAAwC,GACJ,EAAKxE,SAAS,CACZjB,MAAM,CAAEyF,GAAH,mBAAe,EAAKlE,MAAMvB,UAEjC,EAAK2E,oBAENM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAtGb,EAyGnBQ,eAAiB,SAACtH,GAChB,IAAMU,EAAUV,EAAKW,MAAMC,MAAK,SAAAC,GAAI,OAAIA,EAAKL,MAAQ,EAAK2C,MAAMyD,YAAYpG,OAC5EkG,EAAIa,SAASvH,EAAKQ,IAAKE,GACpBmE,MAAK,SAAAwC,GACJ,IAAMG,EAAW,EAAKrE,MAAMvB,MAAMC,KAAI,SAAAhB,GAAI,OAAIA,EAAKL,MAAQR,EAAKQ,IAAM6G,EAASxG,KAC/E,EAAKgC,SAAS,CACZjB,MAAO4F,OAGVX,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OAlHb,EAqHnBW,iBAAmB,SAACzH,GAClB0G,EAAIgB,WAAW1H,EAAKQ,KACjBqE,MAAK,SAAAC,GACJ,IAAM0C,EAAW,EAAKrE,MAAMvB,MAAM+F,QAAO,SAAA9G,GAAI,OAAIA,EAAKL,MAAQR,EAAKQ,OACnE,EAAKqC,SAAS,CACZjB,MAAO4F,OAGVX,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,OA3H9B,EAAK3D,MAAQ,CACX8C,wBAAwB,EACxBE,qBAAqB,EACrBJ,uBAAuB,EACvB6B,WAAW,EACXvB,cAAc,EACdO,YAAa,KACbN,QAAS,CACPxF,KAAM,KACNC,KAAM,OAXO,E,gEAgBE,IAAD,OAClBT,KAAKuC,SAAS,CACZ+E,WAAW,IAEb3C,QAAQ4C,IAAI,CAACnB,EAAIoB,cAAepB,EAAIqB,oBACjClD,MAAK,YAA+B,IAAD,mBAA5B4B,EAA4B,KAAlBuB,EAAkB,KAClC,EAAKnF,SAAS,CACZ+D,YAAaH,EACb7E,MAAOoG,EACPJ,WAAW,OAGdf,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,Q,+BAqG9B,OACE,yBAAK3H,UAAU,QAEb,kBAACO,EAAmBuI,SAApB,CAA6BlF,MAAOzC,KAAK6C,MAAMyD,aAE7C,kBAAC,EAAD,MACCtG,KAAK6C,MAAMyE,UAAY,kBAAC,EAAD,MAActH,KAAK6C,MAAMyD,aAAe,kBAAC,EAAD,CAC9DrF,cAAejB,KAAK0F,uBACpBtE,WAAYpB,KAAK4F,oBACjB7E,aAAcf,KAAKwF,sBACnB/F,YAAaO,KAAK8F,gBAClBxE,MAAOtB,KAAK6C,MAAMvB,MAClB1B,WAAYI,KAAKgH,eACjBlH,aAAcE,KAAKmH,mBAErB,kBAAC,EAAD,MAECnH,KAAK6C,MAAMyD,aAAe,kBAAC,EAAD,CACzBxE,OAAQ9B,KAAK6C,MAAM8C,uBACnBhE,QAAS3B,KAAKiG,eACdnC,aAAc9D,KAAKkG,mBAGrB,kBAAC,EAAD,CACEpE,OAAQ9B,KAAK6C,MAAMgD,oBACnBlE,QAAS3B,KAAKiG,eACd7E,WAAYpB,KAAK6G,uBAGnB,kBAAC,EAAD,CACE/E,OAAQ9B,KAAK6C,MAAM4C,sBACnB9D,QAAS3B,KAAKiG,eACd3C,eAAgBtD,KAAK2G,qBAGvB,kBAAC,EAAD,CACEjH,KAAMM,KAAK6C,MAAMkD,aACjBpE,QAAS3B,KAAKiG,eACdrE,MAAO5B,KAAK6C,MAAMmD,gB,GAxKZ/G,IAAMC,WCAJ0I,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjE,MAAK,SAAAkE,GACJA,EAAaC,gBAEdnC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAMmC,c","file":"static/js/main.8748b35e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mestoLogo.e889e45f.svg\";","module.exports = __webpack_public_path__ + \"static/media/editButton.58afbe73.svg\";","module.exports = __webpack_public_path__ + \"static/media/addButton.bdfb8ebb.svg\";","import React from 'react';\r\nimport logo from '../images/mestoLogo.svg';\r\n\r\nclass Header extends React.Component {\r\n  render () {\r\n    return (\r\n      <header className=\"header\">\r\n        <img className=\"logo\" src={logo} alt=\"Логотип\" />\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n  render () {\r\n    return (\r\n      <footer className=\"footer\">\r\n        <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\n\r\nclass Card extends React.Component {\r\n  handleClick = () => {\r\n    this.props.onCardClick(this.props.card);\r\n  }\r\n\r\n  handleLikeClick = () => {\r\n    this.props.onCardLike(this.props.card);\r\n  }\r\n\r\n  handleDeleteCard = () => {\r\n    this.props.onCardDelete(this.props.card)\r\n  }\r\n\r\n  static contextType = CurrentUserContext;\r\n\r\n  render () {\r\n    const isOwn = this.props.card.owner._id === this.context._id;\r\n    const isLiked = this.props.card.likes.some(item => item._id === this.context._id);\r\n    return (\r\n      <div className=\"place\">\r\n        <img\r\n          className=\"place__image\"\r\n          src={this.props.card.link}\r\n          alt={this.props.card.name}\r\n          onClick={this.handleClick}\r\n        />\r\n        {isOwn && <button type=\"button\" className=\"place__delete-card\" onClick={this.handleDeleteCard}></button>}\r\n        <div className=\"place__description\">\r\n          <p className=\"place__name\">{this.props.card.name}</p>\r\n          <div className=\"place__like-box\">\r\n            <button type=\"button\" className={isLiked ? \"place__like place__like_active\" : \"place__like\"} onClick={this.handleLikeClick}></button>\r\n            <p className=\"place__count\">{this.props.card.likes.length}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\nimport Card from './Card';\nimport pen from '../images/editButton.svg';\nimport plus from '../images/addButton.svg';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nclass Main extends React.Component {\n  static contextType = CurrentUserContext;\n\n  render() {\n    return (\n      <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__box\">\n\n          <button\n            className=\"profile__avabutton\"\n            type=\"button\"\n            onClick={this.props.onEditAvatar}>\n              <img\n                alt=\"Аватар\"\n                className=\"profile__avatar\"\n                src={this.context.avatar}\n              />\n          </button>\n\n          <div className=\"profile__info\">\n            <div className=\"profile__details\">\n              <h1 className=\"profile__name\">{this.context.name}</h1>\n              <button\n                type=\"button\"\n                className=\"button profile__edit-button\"\n                onClick={this.props.onEditProfile}>\n                  <img\n                  src={pen}\n                  alt=\"Ручка\"\n                  />\n              </button>\n            </div>\n            <p className=\"profile__job\">{this.context.about}</p>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          className=\"button profile__add-button\"\n          onClick={this.props.onAddPlace}>\n            <img\n              src={plus}\n              alt=\"Плюс\"\n            />\n        </button>\n      </section>\n      <section className=\"places\">\n        {this.props.cards.map(card => (\n          <Card\n            card={card}\n            key={card._id}\n            onCardClick={this.props.onCardClick}\n            onCardLike={this.props.onCardLike}\n            onCardDelete={this.props.onCardDelete}\n          />\n        ))}\n      </section>\n    </main>\n    )\n  }\n}\n\nexport default Main;\n","import React from 'react'\n\nfunction Spinner() {\n    return (\n        <div className=\"spinner\" />\n    )\n}\n\nexport default Spinner\n","import React from 'react';\r\n\r\nclass ImagePopup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={this.props.card ? \"popup popup_type_img popup_opened\" : \"popup popup_type_img\"}>\r\n        <div className=\"popup__image-container\">\r\n          <button\r\n          className=\"popup__close\"\r\n          type=\"button\"\r\n          onClick={this.props.onClose}>\r\n          </button>\r\n          <img  className=\"popup__image\" src={this.props.image.link} alt={this.props.image.name} />\r\n          <p className=\"popup__text\">{this.props.image.name}</p>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm (props) {\r\n return (\r\n  <div className={\r\n    `popup popup_type_${props.name}\r\n    ${(props.isOpen) ? \"popup_opened\" : \"\"}`\r\n  }>\r\n    <div className=\"popup__container\">\r\n      <button className=\"popup__close\" type=\"button\" onClick={props.onClose}></button>\r\n      <h3 className=\"popup__title\">{props.title}</h3>\r\n      <form className=\"form\" name={props.name} noValidate onSubmit={props.onSubmit}>\r\n        {props.children}\r\n        <button type=\"submit\" className=\"popup__save-btn\">\r\n          {props.btnTitle}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n )\r\n}\r\n\r\n\r\nexport default PopupWithForm;\r\n\r\n\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nclass AddPlacePopup extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: '',\r\n      link: ''\r\n    }\r\n  }\r\n\r\n  handleNameChange = (e) => {\r\n    this.setState({\r\n      name: e.target.value\r\n    })\r\n  }\r\n\r\n  handleLinkChange = (e) => {\r\n    this.setState({\r\n      link: e.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddPlace({\r\n      name: this.state.name,\r\n      link: this.state.link\r\n    })\r\n    this.setState({\r\n      name: '',\r\n      link: ''\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <PopupWithForm\r\n        name=\"card\"\r\n        title=\"Новое место\"\r\n        btnTitle=\"Создать\"\r\n        isOpen={this.props.isOpen}\r\n        onClose={this.props.onClose}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"Название\"\r\n            className=\"popup__input popup__input_type_place\"\r\n            minLength=\"1\"\r\n            maxLength=\"30\"\r\n            required\r\n            id=\"name-input\"\r\n            value={this.state.name}\r\n            onChange={this.handleNameChange}\r\n          />\r\n          <span\r\n            className=\"popup__input-error\"\r\n            id=\"name-input-error\">\r\n          </span>\r\n          <input\r\n            type=\"url\"\r\n            name=\"link\"\r\n            placeholder=\"Ссылка на картинку\"\r\n            className=\"popup__input popup__input_type_link\"\r\n            required\r\n            id=\"url-input\"\r\n            value={this.state.link}\r\n            onChange={this.handleLinkChange}\r\n          />\r\n          <span\r\n            className=\"popup__input-error\"\r\n            id=\"url-input-error\">\r\n          </span>\r\n      </PopupWithForm>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddPlacePopup;\r\n\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nclass EditAvatarPopup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.imageLinkRef = React.createRef();\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onUpdateAvatar(this.imageLinkRef.current.value);\r\n    this.imageLinkRef.current.value = '';\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <PopupWithForm\r\n          name=\"avatar\"\r\n          title=\"Обновить аватар\"\r\n          isOpen={this.props.isOpen}\r\n          onClose={this.props.onClose}\r\n          onSubmit={this.handleSubmit}\r\n          btnTitle=\"Сохранить\"\r\n        >\r\n          <input\r\n            type=\"url\"\r\n            className=\"popup__input popup__input_type_link\"\r\n            name=\"link\"\r\n            placeholder=\"Ссылка на картинку\"\r\n            id=\"avatar-input\"\r\n            required\r\n            ref={this.imageLinkRef}\r\n          />\r\n          <span\r\n            className=\"popup__input-error\"\r\n            id=\"avatar-input-error\">\r\n          </span>\r\n        </PopupWithForm>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nclass EditProfilePopup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      description: ''\r\n    }\r\n  }\r\n\r\n  static contextType = CurrentUserContext;\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      name: this.context.name,\r\n      description: this.context.about\r\n    })\r\n  }\r\n\r\n  handleNameChange = (event) => {\r\n    this.setState({\r\n      name: event.target.value\r\n    })\r\n  }\r\n\r\n  handleDescriptionChange = (event) => {\r\n    this.setState({\r\n      description: event.target.value\r\n    })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.onUpdateUser({\r\n      name: this.state.name,\r\n      about: this.state.description\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n        <PopupWithForm\r\n          name=\"profile\"\r\n          title=\"Редактировать профиль\"\r\n          isOpen={this.props.isOpen}\r\n          onClose={this.props.onClose}\r\n          onSubmit={this.handleSubmit}\r\n          btnTitle=\"Сохранить\"\r\n        >\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Имя\"\r\n              className=\"popup__input popup__input_type_name\"\r\n              required\r\n              pattern=\"[a-zA-ZА-ЯЁа-яё\\s\\-]+\"\r\n              minLength=\"2\"\r\n              maxLength=\"40\"\r\n              id=\"name-input\"\r\n              value={this.state.name}\r\n              onChange={this.handleNameChange}\r\n            />\r\n            <span\r\n              className=\"popup__input-error\"\r\n              id=\"name-input-error\">\r\n            </span>\r\n            <input\r\n              type=\"text\"\r\n              name=\"job\"\r\n              placeholder=\"О себе\"\r\n              className=\"popup__input popup__input_type_job\"\r\n              required\r\n              minLength=\"2\"\r\n              maxLength=\"200\"\r\n              id=\"job-input\"\r\n              value={this.state.description}\r\n              onChange={this.handleDescriptionChange}\r\n            />\r\n            <span\r\n              className=\"popup__input-error\"\r\n              id=\"job-input-error\">\r\n            </span>\r\n        </PopupWithForm>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import {baseURL, token} from './constants';\r\n\r\nclass Api {\r\n  constructor(baseURL, token) {\r\n    this._baseURL = baseURL;\r\n    this._token = token;\r\n  }\r\n\r\n  _fetchInfo(url, properties) {\r\n    return fetch(this._baseURL + url, properties)\r\n      .then(res => {\r\n        if(res.ok) {\r\n          return res.json();\r\n        }\r\n        return Promise.reject(`Ошибка: ${res.status}`);\r\n      })\r\n  }\r\n\r\n  getUserInfo() {\r\n    return this._fetchInfo('/users/me', {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    });\r\n  }\r\n\r\n  updUserInfo(dataForm) {\r\n    return this._fetchInfo('/users/me', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(dataForm)\r\n    });\r\n  }\r\n\r\n  getInitialCards() {\r\n    return this._fetchInfo('/cards', {\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    });\r\n  }\r\n\r\n  uploadCard(dataForm) {\r\n    return this._fetchInfo('/cards', {\r\n      method: 'POST',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(dataForm)\r\n    });\r\n  }\r\n\r\n  likeCard(id, liked) {\r\n    let method;\r\n    if (liked) {\r\n      method = 'DELETE';\r\n    } else {\r\n      method = 'PUT';\r\n    }\r\n    return this._fetchInfo('/cards/likes/' + id, {\r\n      method: method,\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteCard(id) {\r\n    return this._fetchInfo('/cards/' + id, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        authorization: this._token\r\n      }\r\n    });\r\n  }\r\n\r\n  changeAvatar(link) {\r\n    return this._fetchInfo('/users/me/avatar', {\r\n      method: 'PATCH',\r\n      headers: {\r\n        authorization: this._token,\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        avatar: link\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport default new Api(baseURL, token);","\r\n// Настройки валидации форм (2 параметра у FormValidator - объект с настройками и элемент формы)\r\nexport const validationSettings = {\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.button__elem',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__input-error_active'\r\n};\r\n\r\nexport const baseURL = 'https://mesto.nomoreparties.co/v1/cohort-12';\r\nexport const token = 'd358cac0-a420-4d4c-9dd2-c14a231c4bbb';\r\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport Spinner from './Spinner';\nimport ImagePopup from './ImagePopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditProfilePopupOPen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      isLoading: false,\n      selectedCard: false,\n      currentUser: null,\n      dataImg: {\n        link: null,\n        name: null\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    })\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userInfo, initialCards]) => {\n        this.setState({\n          currentUser: userInfo,\n          cards: initialCards,\n          isLoading: false\n        })\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({\n      isEditAvatarPopupOpen: true\n    })\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({\n      isEditProfilePopupOPen: true\n    })\n  }\n\n  handleAddPlaceClick = () => {\n    this.setState({\n      isAddPlacePopupOpen: true\n    })\n  }\n\n  handleCardClick = (card) => {\n    this.setState({\n      selectedCard: true,\n      dataImg: {\n        link: card.link,\n        name: card.name\n      }\n    })\n  }\n\n  closeAllPopups = () => {\n    this.setState({\n      isEditProfilePopupOPen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: false,\n      dataImg: {\n        link: null,\n        name: null\n      }\n    })\n  }\n\n  handleUpdateUser = (userInfo) => {\n    api.updUserInfo(userInfo)\n      .then(userInfo => {\n        this.setState({\n          currentUser: userInfo\n        })\n        this.closeAllPopups();\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleUpdateAvatar = (link) => {\n    api.changeAvatar(link)\n      .then(userInfo => {\n        this.setState({\n          currentUser: userInfo\n        })\n        this.closeAllPopups();\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleAddPlaceSubmit = (dataForm) => {\n    api.uploadCard(dataForm)\n      .then(newCard => {\n        this.setState({\n          cards: [newCard, ...this.state.cards]\n        })\n        this.closeAllPopups();\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleCardLike = (card) => {\n    const isLiked = card.likes.some(item => item._id === this.state.currentUser._id);\n    api.likeCard(card._id, isLiked)\n      .then(newCard => {\n        const newCards = this.state.cards.map(item => item._id === card._id ? newCard: item);\n        this.setState({\n          cards: newCards\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleCardDelete = (card) => {\n    api.deleteCard(card._id)\n      .then(res => {\n        const newCards = this.state.cards.filter(item => item._id !== card._id);\n        this.setState({\n          cards: newCards\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n\n        <CurrentUserContext.Provider value={this.state.currentUser}>\n\n          <Header />\n          {this.state.isLoading ? <Spinner /> : this.state.currentUser && <Main\n            onEditProfile={this.handleEditProfileClick}\n            onAddPlace={this.handleAddPlaceClick}\n            onEditAvatar={this.handleEditAvatarClick}\n            onCardClick={this.handleCardClick}\n            cards={this.state.cards}\n            onCardLike={this.handleCardLike}\n            onCardDelete={this.handleCardDelete}\n          />}\n          <Footer />\n\n          {this.state.currentUser && <EditProfilePopup\n            isOpen={this.state.isEditProfilePopupOPen}\n            onClose={this.closeAllPopups}\n            onUpdateUser={this.handleUpdateUser}\n          />}\n\n          <AddPlacePopup\n            isOpen={this.state.isAddPlacePopupOpen}\n            onClose={this.closeAllPopups}\n            onAddPlace={this.handleAddPlaceSubmit}\n          />\n\n          <EditAvatarPopup\n            isOpen={this.state.isEditAvatarPopupOpen}\n            onClose={this.closeAllPopups}\n            onUpdateAvatar={this.handleUpdateAvatar}\n          />\n\n          <ImagePopup\n            card={this.state.selectedCard}\n            onClose={this.closeAllPopups}\n            image={this.state.dataImg}\n          />\n\n        </CurrentUserContext.Provider>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}