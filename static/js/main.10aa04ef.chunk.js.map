{"version":3,"sources":["images/mestoLogo.svg","images/editButton.svg","images/addButton.svg","components/Header.js","components/Footer.js","utils/Api.js","utils/constants.js","components/Card.js","components/Main.js","components/ImagePopup.js","components/PopupWithForm.js","components/ButtonSubmit.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","React","Component","Footer","baseURL","token","this","_baseURL","_token","url","properties","fetch","then","res","ok","json","Promise","reject","status","_fetchInfo","headers","authorization","dataForm","method","body","JSON","stringify","id","liked","link","avatar","Card","props","handleClick","onCardClick","card","onClick","type","name","likes","length","Main","state","userName","userJob","userAvatar","cards","all","api","getUserInfo","getInitialCards","about","initialCards","setState","catch","err","console","log","onEditAvatar","onEditProfile","pen","onAddPlace","plus","map","key","_id","ImagePopup","onClose","PopupWithForm","isOpen","title","noValidate","children","ButtonSubmit","App","handleEditAvatarClick","isEditAvatarPopupOpen","handleEditProfileClick","isEditProfilePopupOPen","handleAddPlaceClick","isAddPlacePopupOpen","handleCardClick","selectedCard","closeAllPopups","placeholder","required","pattern","minLength","maxLength","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.10aa04ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mestoLogo.e889e45f.svg\";","module.exports = __webpack_public_path__ + \"static/media/editButton.6bfdb354.svg\";","module.exports = __webpack_public_path__ + \"static/media/addButton.b2fce4ac.svg\";","import React from 'react';\nimport logo from '../images/mestoLogo.svg';\n\nclass Header extends React.Component {\n  render () {\n    return (\n      <header className=\"header\">\n        <img className=\"logo\" src={logo} alt=\"Логотип\" />\n      </header>\n    )\n  }\n}\n\nexport default Header;","import React from 'react';\n\nclass Footer extends React.Component {\n  render () {\n    return (\n      <footer className=\"footer\">\n        <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;","import {baseURL, token} from './constants';\n\nclass Api {\n  constructor(baseURL, token) {\n    this._baseURL = baseURL;\n    this._token = token;\n  }\n\n  _fetchInfo(url, properties) {\n    return fetch(this._baseURL + url, properties)\n      .then(res => {\n        if(res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  getUserInfo() {\n    return this._fetchInfo('/users/me', {\n      headers: {\n        authorization: this._token\n      }\n    });\n  }\n\n  updUserInfo(dataForm) {\n    return this._fetchInfo('/users/me', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dataForm)\n    });\n  }\n\n  getInitialCards() {\n    return this._fetchInfo('/cards', {\n      headers: {\n        authorization: this._token\n      }\n    });\n  }\n\n  uploadCard(dataForm) {\n    return this._fetchInfo('/cards', {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dataForm)\n    });\n  }\n\n  likeCard(id, liked) {\n    let method;\n    if (liked) {\n      method = 'DELETE';\n    } else {\n      method = 'PUT';\n    }\n    return this._fetchInfo('/cards/likes/' + id, {\n      method: method,\n      headers: {\n        authorization: this._token\n      }\n    });\n  }\n\n  deleteCard(id) {\n    return this._fetchInfo('/cards/' + id, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    });\n  }\n\n  changeAvatar(link) {\n    return this._fetchInfo('/users/me/avatar', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link\n      })\n    })\n  }\n}\n\n\nexport default new Api(baseURL, token);","\n// Настройки валидации форм (2 параметра у FormValidator - объект с настройками и элемент формы)\nexport const validationSettings = {\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.button__elem',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__input-error_active'\n};\n\nexport const baseURL = 'https://mesto.nomoreparties.co/v1/cohort-12';\nexport const token = 'd358cac0-a420-4d4c-9dd2-c14a231c4bbb';\n","import React from 'react';\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  handleClick = () => {\n    this.props.onCardClick(this.props.card);\n  }\n\n  render () {\n    return (\n      <div className=\"place\">\n        <img\n        className=\"place__image\"\n        src={this.props.card.link}\n        onClick={this.handleClick}\n        />\n        <button type=\"button\" className=\"place__delete-card\"></button>\n        <div className=\"place__description\">\n          <p className=\"place__name\">{this.props.card.name}</p>\n          <div className=\"place__like-box\">\n            <button type=\"button\" className=\"place__like\"></button>\n            <p className=\"place__count\">{this.props.card.likes.length}</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Card;","import React from 'react';\nimport api from '../utils/Api';\nimport Card from './Card';\nimport pen from '../images/editButton.svg';\nimport plus from '../images/addButton.svg';\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: '',\n      userJob: '',\n      userAvatar: '',\n      cards: []\n    }\n  }\n\n  componentDidMount() {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([{name, about, avatar}, initialCards]) => {\n        this.setState({\n          userName: name,\n          userJob: about,\n          userAvatar: avatar,\n          cards: initialCards\n        })\n      })\n      .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__box\">\n\n          <button\n            className=\"profile__avabutton\"\n            type=\"button\"\n            onClick={this.props.onEditAvatar}>\n              <img\n              alt=\"Аватар\"\n              className=\"profile__avatar\"\n              src={this.state.userAvatar}\n              />\n          </button>\n\n          <div className=\"profile__info\">\n            <div className=\"profile__details\">\n              <h1 className=\"profile__name\">{this.state.userName}</h1>\n              <button\n                type=\"button\"\n                className=\"button profile__edit-button\"\n                onClick={this.props.onEditProfile}>\n                  <img\n                  src={pen}\n                  alt=\"Ручка\"\n                  />\n              </button>\n            </div>\n            <p className=\"profile__job\">{this.state.userJob}</p>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          className=\"button profile__add-button\"\n          onClick={this.props.onAddPlace}>\n            <img\n            src={plus}\n            alt=\"Плюс\"\n            />\n        </button>\n      </section>\n      <section className=\"places\">\n        {this.state.cards.map(card => (\n          <Card\n            card={card}\n            key={card._id}\n            onCardClick={this.props.onCardClick}\n          />\n        ))}\n      </section>\n    </main>\n    )\n  }\n}\n\nexport default Main;","import React from 'react';\n\nclass ImagePopup extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className={this.props.card ? \"popup popup_type_img popup_opened\" : \"popup popup_type_img\"}>\n        <div className=\"popup__image-container\">\n          <button\n          className=\"popup__close\"\n          type=\"button\"\n          onClick={this.props.onClose}>\n          </button>\n          <img  className=\"popup__image\" src={this.props.card} />\n          <p className=\"popup__text\"></p>\n        </div>\n    </div>\n    )\n  }\n}\n\nexport default ImagePopup;","import React from 'react';\n\nfunction PopupWithForm (props) {\n return (\n  <div className={\n    `popup popup_type_${props.name}\n    ${(props.isOpen) ? \"popup_opened\" : \"\"}`\n  }>\n    <div className=\"popup__container\">\n      <button className=\"popup__close\" type=\"button\" onClick={props.onClose}></button>\n      <h3 className=\"popup__title\">{props.title}</h3>\n      <form className=\"form\" name={props.name} noValidate>\n        {props.children}\n      </form>\n    </div>\n  </div>\n )\n}\n\n\nexport default PopupWithForm;\n\n\n","import React from 'react';\n\nfunction ButtonSubmit(props) {\n  return (\n    <button type=\"submit\" className=\"popup__save-btn\">\n      {props.children}\n    </button>\n  );\n}\n\nexport default ButtonSubmit;","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm';\nimport ButtonSubmit from './ButtonSubmit';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditProfilePopupOPen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: ''\n    }\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({\n      isEditAvatarPopupOpen: true\n    })\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({\n      isEditProfilePopupOPen: true\n    })\n  }\n\n  handleAddPlaceClick = () => {\n    this.setState({\n      isAddPlacePopupOpen: true\n    })\n  }\n\n  handleCardClick = (card) => {\n    this.setState({\n      selectedCard: card.link\n    })\n  }\n\n  closeAllPopups = () => {\n    this.setState({\n      isEditProfilePopupOPen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: ''\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n        <Header />\n        <Main\n          onEditProfile={this.handleEditProfileClick}\n          onAddPlace={this.handleAddPlaceClick}\n          onEditAvatar={this.handleEditAvatarClick}\n          onCardClick={this.handleCardClick}\n        />\n        <Footer />\n\n      <PopupWithForm\n      name=\"profile\"\n      title=\"Редактировать профиль\"\n      isOpen={this.state.isEditProfilePopupOPen}\n      onClose={this.closeAllPopups}>\n        <input type=\"text\" name=\"name\" placeholder=\"Имя\" className=\"popup__input popup__input_type_name\" required pattern=\"[a-zA-ZА-ЯЁа-яё\\s\\-]+\" minLength=\"2\" maxLength=\"40\"  id=\"name-input\" />\n        <span className=\"popup__input-error\" id=\"name-input-error\"></span>\n        <input type=\"text\" name=\"job\" placeholder=\"О себе\" className=\"popup__input popup__input_type_job\" required minLength=\"2\" maxLength=\"200\" id=\"job-input\" />\n        <span className=\"popup__input-error\" id=\"job-input-error\"></span>\n        <ButtonSubmit>Сохранить</ButtonSubmit>\n      </PopupWithForm>\n\n      <PopupWithForm\n      name=\"card\"\n      title=\"Новое место\"\n      isOpen={this.state.isAddPlacePopupOpen}\n      onClose={this.closeAllPopups}>\n        <input type=\"text\" name=\"name\" placeholder=\"Название\" className=\"popup__input\" required minLength=\"1\" maxLength=\"30\" id=\"name-input\" />\n        <span className=\"popup__input-error\" id=\"name-input-error\"></span>\n        <input type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" className=\"popup__input\" required id=\"url-input\" />\n        <span className=\"popup__input-error\" id=\"url-input-error\"></span>\n        <ButtonSubmit>Создать</ButtonSubmit>\n      </PopupWithForm>\n\n      <PopupWithForm\n      name=\"avatar\"\n      title=\"Обновить аватар\"\n      isOpen={this.state.isEditAvatarPopupOpen}\n      onClose={this.closeAllPopups}>\n        <input type=\"url\" className=\"popup__input popup__input_type_link\" name=\"link\" placeholder=\"Ссылка на картинку\" id=\"avatar-input\" required />\n        <span className=\"popup__input-error\" id=\"avatar-input-error\"></span>\n        <ButtonSubmit>Сохранить</ButtonSubmit>\n      </PopupWithForm>\n\n      <ImagePopup card={this.state.selectedCard} onClose={this.closeAllPopups} />\n\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}