{"version":3,"sources":["images/mestoLogo.svg","images/editButton.svg","images/addButton.svg","components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/ImagePopup.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","utils/Api.js","utils/constants.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","src","logo","alt","React","Component","Footer","CurrentUserContext","createContext","Card","handleClick","props","onCardClick","card","handleLikeClick","onCardLike","handleDeleteCard","onCardDelete","isOwn","this","owner","_id","context","isLiked","likes","some","item","link","name","onClick","type","length","contextType","Main","onEditAvatar","avatar","onEditProfile","pen","about","onAddPlace","plus","cards","map","key","ImagePopup","onClose","image","PopupWithForm","isOpen","title","noValidate","onSubmit","children","btnTitle","AddPlacePopup","handleNameChange","e","setState","target","value","handleLinkChange","handleSubmit","preventDefault","state","placeholder","minLength","maxLength","required","id","onChange","EditAvatarPopup","event","onUpdateAvatar","imageLinkRef","current","createRef","ref","EditProfilePopup","handleDescriptionChange","description","onUpdateUser","pattern","baseURL","token","_baseURL","_token","url","properties","fetch","then","res","ok","json","Promise","reject","status","_fetchInfo","headers","authorization","dataForm","method","body","JSON","stringify","liked","App","handleEditAvatarClick","isEditAvatarPopupOpen","handleEditProfileClick","isEditProfilePopupOPen","handleAddPlaceClick","isAddPlacePopupOpen","handleCardClick","selectedCard","dataImg","closeAllPopups","handleUpdateUser","userInfo","api","updUserInfo","currentUser","catch","error","console","log","handleUpdateAvatar","changeAvatar","handleAddPlaceSubmit","uploadCard","newCard","handleCardLike","likeCard","newCards","handleCardDelete","deleteCard","filter","all","getUserInfo","getInitialCards","initialCards","Provider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.90eec1e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mestoLogo.e889e45f.svg\";","module.exports = __webpack_public_path__ + \"static/media/editButton.6bfdb354.svg\";","module.exports = __webpack_public_path__ + \"static/media/addButton.b2fce4ac.svg\";","import React from 'react';\nimport logo from '../images/mestoLogo.svg';\n\nclass Header extends React.Component {\n  render () {\n    return (\n      <header className=\"header\">\n        <img className=\"logo\" src={logo} alt=\"Логотип\" />\n      </header>\n    )\n  }\n}\n\nexport default Header;","import React from 'react';\n\nclass Footer extends React.Component {\n  render () {\n    return (\n      <footer className=\"footer\">\n        <p className=\"footer__copyright\">&copy; 2020 Mesto Russia</p>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;","import React from 'react';\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\n\nclass Card extends React.Component {\n  handleClick = () => {\n    this.props.onCardClick(this.props.card);\n  }\n\n  handleLikeClick = () => {\n    this.props.onCardLike(this.props.card);\n  }\n\n  handleDeleteCard = () => {\n    this.props.onCardDelete(this.props.card)\n  }\n\n  static contextType = CurrentUserContext;\n\n  render () {\n    const isOwn = this.props.card.owner._id === this.context._id;\n    const isLiked = this.props.card.likes.some(item => item._id === this.context._id);\n    return (\n      <div className=\"place\">\n        <img\n          className=\"place__image\"\n          src={this.props.card.link}\n          alt={this.props.card.name}\n          onClick={this.handleClick}\n        />\n        {isOwn && <button type=\"button\" className=\"place__delete-card\" onClick={this.handleDeleteCard}></button>}\n        <div className=\"place__description\">\n          <p className=\"place__name\">{this.props.card.name}</p>\n          <div className=\"place__like-box\">\n            <button type=\"button\" className={isLiked ? \"place__like place__like_active\" : \"place__like\"} onClick={this.handleLikeClick}></button>\n            <p className=\"place__count\">{this.props.card.likes.length}</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\nimport pen from '../images/editButton.svg';\nimport plus from '../images/addButton.svg';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nclass Main extends React.Component {\n  static contextType = CurrentUserContext;\n\n  render() {\n    return (\n      <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__box\">\n\n          <button\n            className=\"profile__avabutton\"\n            type=\"button\"\n            onClick={this.props.onEditAvatar}>\n              <img\n                alt=\"Аватар\"\n                className=\"profile__avatar\"\n                src={this.context.avatar}\n              />\n          </button>\n\n          <div className=\"profile__info\">\n            <div className=\"profile__details\">\n              <h1 className=\"profile__name\">{this.context.name}</h1>\n              <button\n                type=\"button\"\n                className=\"button profile__edit-button\"\n                onClick={this.props.onEditProfile}>\n                  <img\n                  src={pen}\n                  alt=\"Ручка\"\n                  />\n              </button>\n            </div>\n            <p className=\"profile__job\">{this.context.about}</p>\n          </div>\n        </div>\n        <button\n          type=\"button\"\n          className=\"button profile__add-button\"\n          onClick={this.props.onAddPlace}>\n            <img\n              src={plus}\n              alt=\"Плюс\"\n            />\n        </button>\n      </section>\n      <section className=\"places\">\n        {this.props.cards.map(card => (\n          <Card\n            card={card}\n            key={card._id}\n            onCardClick={this.props.onCardClick}\n            onCardLike={this.props.onCardLike}\n            onCardDelete={this.props.onCardDelete}\n          />\n        ))}\n      </section>\n    </main>\n    )\n  }\n}\n\nexport default Main;\n","import React from 'react';\n\nclass ImagePopup extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div className={this.props.card ? \"popup popup_type_img popup_opened\" : \"popup popup_type_img\"}>\n        <div className=\"popup__image-container\">\n          <button\n          className=\"popup__close\"\n          type=\"button\"\n          onClick={this.props.onClose}>\n          </button>\n          <img  className=\"popup__image\" src={this.props.image.link} alt={this.props.image.name} />\n          <p className=\"popup__text\">{this.props.image.name}</p>\n        </div>\n    </div>\n    )\n  }\n}\n\nexport default ImagePopup;\n","import React from 'react';\n\nfunction PopupWithForm (props) {\n return (\n  <div className={\n    `popup popup_type_${props.name}\n    ${(props.isOpen) ? \"popup_opened\" : \"\"}`\n  }>\n    <div className=\"popup__container\">\n      <button className=\"popup__close\" type=\"button\" onClick={props.onClose}></button>\n      <h3 className=\"popup__title\">{props.title}</h3>\n      <form className=\"form\" name={props.name} noValidate onSubmit={props.onSubmit}>\n        {props.children}\n        <button type=\"submit\" className=\"popup__save-btn\">\n          {props.btnTitle}\n        </button>\n      </form>\n    </div>\n  </div>\n )\n}\n\n\nexport default PopupWithForm;\n\n\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nclass AddPlacePopup extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      link: ''\n    }\n  }\n\n  handleNameChange = (e) => {\n    this.setState({\n      name: e.target.value\n    })\n  }\n\n  handleLinkChange = (e) => {\n    this.setState({\n      link: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onAddPlace({\n      name: this.state.name,\n      link: this.state.link\n    })\n    this.setState({\n      name: '',\n      link: ''\n    })\n  }\n\n  render () {\n    return (\n      <PopupWithForm\n        name=\"card\"\n        title=\"Новое место\"\n        btnTitle=\"Создать\"\n        isOpen={this.props.isOpen}\n        onClose={this.props.onClose}\n        onSubmit={this.handleSubmit}\n      >\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Название\"\n            className=\"popup__input popup__input_type_place\"\n            minLength=\"1\"\n            maxLength=\"30\"\n            required\n            id=\"name-input\"\n            value={this.state.name}\n            onChange={this.handleNameChange}\n          />\n          <span\n            className=\"popup__input-error\"\n            id=\"name-input-error\">\n          </span>\n          <input\n            type=\"url\"\n            name=\"link\"\n            placeholder=\"Ссылка на картинку\"\n            className=\"popup__input popup__input_type_link\"\n            required\n            id=\"url-input\"\n            value={this.state.link}\n            onChange={this.handleLinkChange}\n          />\n          <span\n            className=\"popup__input-error\"\n            id=\"url-input-error\">\n          </span>\n      </PopupWithForm>\n    )\n  }\n}\n\nexport default AddPlacePopup;\n\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nclass EditAvatarPopup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.imageLinkRef = React.createRef();\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onUpdateAvatar(this.imageLinkRef.current.value);\n    this.imageLinkRef.current.value = '';\n  }\n\n  render() {\n    return (\n        <PopupWithForm\n          name=\"avatar\"\n          title=\"Обновить аватар\"\n          isOpen={this.props.isOpen}\n          onClose={this.props.onClose}\n          onSubmit={this.handleSubmit}\n          btnTitle=\"Сохранить\"\n        >\n          <input\n            type=\"url\"\n            className=\"popup__input popup__input_type_link\"\n            name=\"link\"\n            placeholder=\"Ссылка на картинку\"\n            id=\"avatar-input\"\n            required\n            ref={this.imageLinkRef}\n          />\n          <span\n            className=\"popup__input-error\"\n            id=\"avatar-input-error\">\n          </span>\n        </PopupWithForm>\n    )\n  }\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nclass EditProfilePopup extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      description: ''\n    }\n  }\n\n  static contextType = CurrentUserContext;\n\n  componentDidMount() {\n    this.setState({\n      name: this.context.name,\n      description: this.context.about\n    })\n  }\n\n  handleNameChange = (event) => {\n    this.setState({\n      name: event.target.value\n    })\n  }\n\n  handleDescriptionChange = (event) => {\n    this.setState({\n      description: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.onUpdateUser({\n      name: this.state.name,\n      about: this.state.description\n    })\n  }\n\n  render () {\n    return (\n        <PopupWithForm\n          name=\"profile\"\n          title=\"Редактировать профиль\"\n          isOpen={this.props.isOpen}\n          onClose={this.props.onClose}\n          onSubmit={this.handleSubmit}\n          btnTitle=\"Сохранить\"\n        >\n            <input\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Имя\"\n              className=\"popup__input popup__input_type_name\"\n              required\n              pattern=\"[a-zA-ZА-ЯЁа-яё\\s\\-]+\"\n              minLength=\"2\"\n              maxLength=\"40\"\n              id=\"name-input\"\n              value={this.state.name}\n              onChange={this.handleNameChange}\n            />\n            <span\n              className=\"popup__input-error\"\n              id=\"name-input-error\">\n            </span>\n            <input\n              type=\"text\"\n              name=\"job\"\n              placeholder=\"О себе\"\n              className=\"popup__input popup__input_type_job\"\n              required\n              minLength=\"2\"\n              maxLength=\"200\"\n              id=\"job-input\"\n              value={this.state.description}\n              onChange={this.handleDescriptionChange}\n            />\n            <span\n              className=\"popup__input-error\"\n              id=\"job-input-error\">\n            </span>\n        </PopupWithForm>\n    )\n  }\n\n}\n\nexport default EditProfilePopup;\n","import {baseURL, token} from './constants';\n\nclass Api {\n  constructor(baseURL, token) {\n    this._baseURL = baseURL;\n    this._token = token;\n  }\n\n  _fetchInfo(url, properties) {\n    return fetch(this._baseURL + url, properties)\n      .then(res => {\n        if(res.ok) {\n          return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n      })\n  }\n\n  getUserInfo() {\n    return this._fetchInfo('/users/me', {\n      headers: {\n        authorization: this._token\n      }\n    });\n  }\n\n  updUserInfo(dataForm) {\n    return this._fetchInfo('/users/me', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dataForm)\n    });\n  }\n\n  getInitialCards() {\n    return this._fetchInfo('/cards', {\n      headers: {\n        authorization: this._token\n      }\n    });\n  }\n\n  uploadCard(dataForm) {\n    return this._fetchInfo('/cards', {\n      method: 'POST',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(dataForm)\n    });\n  }\n\n  likeCard(id, liked) {\n    let method;\n    if (liked) {\n      method = 'DELETE';\n    } else {\n      method = 'PUT';\n    }\n    return this._fetchInfo('/cards/likes/' + id, {\n      method: method,\n      headers: {\n        authorization: this._token\n      }\n    });\n  }\n\n  deleteCard(id) {\n    return this._fetchInfo('/cards/' + id, {\n      method: 'DELETE',\n      headers: {\n        authorization: this._token\n      }\n    });\n  }\n\n  changeAvatar(link) {\n    return this._fetchInfo('/users/me/avatar', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: link\n      })\n    })\n  }\n}\n\n\nexport default new Api(baseURL, token);","\n// Настройки валидации форм (2 параметра у FormValidator - объект с настройками и элемент формы)\nexport const validationSettings = {\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.button__elem',\n  inactiveButtonClass: 'popup__button_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__input-error_active'\n};\n\nexport const baseURL = 'https://mesto.nomoreparties.co/v1/cohort-12';\nexport const token = 'd358cac0-a420-4d4c-9dd2-c14a231c4bbb';\n","import React from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport ImagePopup from './ImagePopup';\nimport PopupWithForm from './PopupWithForm';\nimport AddPlacePopup from './AddPlacePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport EditProfilePopup from './EditProfilePopup';\nimport api from '../utils/Api';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isEditProfilePopupOPen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: false,\n      currentUser: null,\n      dataImg: {\n        link: null,\n        name: null\n      }\n    }\n  }\n\n  componentDidMount() {\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\n      .then(([userInfo, initialCards]) => {\n        this.setState({\n          currentUser: userInfo,\n          cards: initialCards\n        })\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleEditAvatarClick = () => {\n    this.setState({\n      isEditAvatarPopupOpen: true\n    })\n  }\n\n  handleEditProfileClick = () => {\n    this.setState({\n      isEditProfilePopupOPen: true\n    })\n  }\n\n  handleAddPlaceClick = () => {\n    this.setState({\n      isAddPlacePopupOpen: true\n    })\n  }\n\n  handleCardClick = (card) => {\n    this.setState({\n      selectedCard: true,\n      dataImg: {\n        link: card.link,\n        name: card.name\n      }\n    })\n  }\n\n  closeAllPopups = () => {\n    this.setState({\n      isEditProfilePopupOPen: false,\n      isAddPlacePopupOpen: false,\n      isEditAvatarPopupOpen: false,\n      selectedCard: false,\n      dataImg: {\n        link: null,\n        name: null\n      }\n    })\n  }\n\n  handleUpdateUser = (userInfo) => {\n    api.updUserInfo(userInfo)\n      .then(userInfo => {\n        this.setState({\n          currentUser: userInfo\n        })\n        this.closeAllPopups();\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleUpdateAvatar = (link) => {\n    api.changeAvatar(link)\n      .then(userInfo => {\n        this.setState({\n          currentUser: userInfo\n        })\n        this.closeAllPopups();\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleAddPlaceSubmit = (dataForm) => {\n    api.uploadCard(dataForm)\n      .then(newCard => {\n        this.setState({\n          cards: [newCard, ...this.state.cards]\n        })\n        this.closeAllPopups();\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleCardLike = (card) => {\n    const isLiked = card.likes.some(item => item._id === this.state.currentUser._id);\n    api.likeCard(card._id, isLiked)\n      .then(newCard => {\n        const newCards = this.state.cards.map(item => item._id === card._id ? newCard: item);\n        this.setState({\n          cards: newCards\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  handleCardDelete = (card) => {\n    api.deleteCard(card._id)\n      .then(res => {\n        const newCards = this.state.cards.filter(item => item._id !== card._id);\n        this.setState({\n          cards: newCards\n        });\n      })\n      .catch(error => console.log(error));\n  }\n\n  render() {\n    return (\n      <div className=\"page\">\n\n        <CurrentUserContext.Provider value={this.state.currentUser}>\n\n          <Header />\n          {this.state.currentUser && <Main\n            onEditProfile={this.handleEditProfileClick}\n            onAddPlace={this.handleAddPlaceClick}\n            onEditAvatar={this.handleEditAvatarClick}\n            onCardClick={this.handleCardClick}\n            cards={this.state.cards}\n            onCardLike={this.handleCardLike}\n            onCardDelete={this.handleCardDelete}\n          />}\n          <Footer />\n\n          {this.state.currentUser && <EditProfilePopup\n            isOpen={this.state.isEditProfilePopupOPen}\n            onClose={this.closeAllPopups}\n            onUpdateUser={this.handleUpdateUser}\n          />}\n\n          <AddPlacePopup\n            isOpen={this.state.isAddPlacePopupOpen}\n            onClose={this.closeAllPopups}\n            onAddPlace={this.handleAddPlaceSubmit}\n          />\n\n          <EditAvatarPopup\n            isOpen={this.state.isEditAvatarPopupOpen}\n            onClose={this.closeAllPopups}\n            onUpdateAvatar={this.handleUpdateAvatar}\n          />\n\n          <ImagePopup\n            card={this.state.selectedCard}\n            onClose={this.closeAllPopups}\n            image={this.state.dataImg}\n          />\n\n        </CurrentUserContext.Provider>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}